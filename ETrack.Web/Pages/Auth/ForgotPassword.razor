@page "/forgot-password"
@layout AuthLayout
@inject NavigationManager NavigationManager
@inject IUserService UserService


<EditForm Model="emailSubmit" OnSubmit="HandleRequest">
    <div class="form-header">
        <span class="material-icons header-icon">lock</span>
        <h1>Forgot Your Password?</h1>
        <p>Enter your email below for a link to reset your password</p>
    </div>
    <div>
    <input class="input" id="email" type="email" @bind="emailSubmit.email" placeholder="" required>
    <label for="email">Email Address</label>
    </div>
        @if(errorMessage is not null)
        {
        <div style="margin-top: 1em;" class="error-message">
            @errorMessage
        </div>
        }
        @if(isLoading)
        {
        <div style="margin-top: 1em; margin-left: calc(50% - 40px);" class="lds-dual-ring"></div>
        }
        @if(success)
        {
            <div style="margin-top: 1em;" class="success-message">
                Forgot password link sent to email address
            </div>        
        }
    <div class="button-container">
        <button class="btn-gray" @onclick="ReturnToLogin" type="reset">Cancel</button>
        <button class="btn" type="submit">Reset Password</button>
    </div>
</EditForm>

@code {
    protected class EmailSubmit 
    {
        public string email {get; set; } = "";
    }
    protected EmailSubmit emailSubmit {get; set;} = new EmailSubmit();

    public void ReturnToLogin()
    {
        NavigationManager.NavigateTo("/login");
    }

    string? errorMessage = null;
    bool isLoading = false;
    bool success = false;

    public async Task HandleRequest()
    {
        errorMessage = null;
        isLoading = true;
        try 
        {
            await UserService.UserPasswordReset(emailSubmit.email);
            success = true;
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
            success = false;
        }
        isLoading = false;
    }
}